name: Deployment Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, edited]

jobs:
  Avoid-redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel redundant process
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  Prepare-PR:
    if: ${{github.event_name == 'pull_request' || github.event_name == 'pull_request_target'}}
    needs: 'Avoid-redundancy'
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title
      - uses: amannn/action-semantic-pull-request@v5
        with:
          types: |
            feat
            fix
            perf
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels to PR based on title
      - uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labelMappings = {
              'fix:': 'fix',
              'docs': 'docs',
              'ci': 'ci',
              'feat:': 'feat',
              'perf:': 'perf'
            };

            const labelToAdd = Object.keys(labelMappings).find(prefix => pr.title.startsWith(prefix));

            if (labelToAdd) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [labelMappings[labelToAdd]]
              });
            }

  Static-and-unit-test:
    if: github.event_name == 'pull_request'
    needs: 'Prepare-PR'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install Deps
        run: npm ci
      - name: Check linter
        run: npm run lint
      - name: Check types
        run: npm run ts
      - name: Check tests
        run: npm run test -- --coverage
        env:
          CI: true

  Semantic-Release:
    if: ${{ (github.event_name == 'push') && always() }}
    needs: [Avoid-redundancy, Static-and-unit-test, Prepare-PR]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Execute semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
